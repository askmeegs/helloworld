apiVersion: v1
kind: Service
metadata:
  name: hello-svc
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: ClusterIP
  selector:
    app: helloworld
  ports:
  - port: 80
    targetPort: 8080
    name: http
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: helloworld-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld
        version: v1
    spec:
      containers:
      - name: helloworld
        image:  meganokeefe/spinnaker-helloworld:v0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: helloworld-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld
        version: v2
    spec:
      containers:
      - name: helloworld
        image:  meganokeefe/spinnaker-helloworld:v0.0.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: hello-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: helloworld
  annotations:
    prometheus.io/scrape: 'true'
spec:
  hosts:
  - "*"
  gateways:
  - hello-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: hello-svc
        port:
          number: 80
        subset: v1
      weight: 90
    - destination:
        host: hello-svc
        port:
          number: 80
        subset: v2
      weight: 10
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: helloworld
spec:
  host: hello-svc
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2